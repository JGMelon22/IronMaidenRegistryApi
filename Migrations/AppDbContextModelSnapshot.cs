// <auto-generated />
using IronMaidenRegistry.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace IronMaidenRegistry.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.Instrument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstrumentId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("InstrumentName");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_Id_Instrument");

                    b.ToTable("Instruments", (string)null);
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberId");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("DATE")
                        .HasColumnName("BirthDate");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("FullName");

                    b.Property<Guid>("InstrumentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_Id_Member");

                    b.HasIndex("InstrumentId");

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.MemberSong", b =>
                {
                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MemberId", "SongId");

                    b.HasIndex("MemberId")
                        .HasDatabaseName("IDX_MemberId_MembersSongs");

                    b.HasIndex("SongId")
                        .HasDatabaseName("IDX_SongId_MembersSongs");

                    b.ToTable("MembersSongs", (string)null);
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SongId");

                    b.Property<byte>("AverageScore")
                        .HasColumnType("TINYINT")
                        .HasColumnName("AverageScore");

                    b.Property<byte>("DurationInMinutes")
                        .HasColumnType("TINYINT")
                        .HasColumnName("DurationInMinutes");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("SongName");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_Id_Song");

                    b.ToTable("Songs", (string)null);
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.Member", b =>
                {
                    b.HasOne("IronMaidenRegistry.Domain.Entities.Instrument", "Instrument")
                        .WithMany("Members")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.MemberSong", b =>
                {
                    b.HasOne("IronMaidenRegistry.Domain.Entities.Member", "Member")
                        .WithMany("MembersSongs")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IronMaidenRegistry.Domain.Entities.Song", "Song")
                        .WithMany("MembersSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.Instrument", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.Member", b =>
                {
                    b.Navigation("MembersSongs");
                });

            modelBuilder.Entity("IronMaidenRegistry.Domain.Entities.Song", b =>
                {
                    b.Navigation("MembersSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
